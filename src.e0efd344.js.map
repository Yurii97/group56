{"version":3,"sources":["index.js"],"names":["canvas","document","querySelector","ctx","getContext","width","window","innerWidth","height","innerHeight","strokeStyle","lineJoin","lineCap","lineWidth","isDrawing","lastX","lastY","hue","direction","draw","ev","beginPath","moveTo","lineTo","offsetX","offsetY","stroke","addEventListener","e"],"mappings":";;;AAiDA,aAjDA,QAAA,oBAEA,MAAMA,EAASC,SAASC,cAAc,SAEhCC,EAAMH,EAAOI,WAAW,MAE9BJ,EAAOK,MAAQC,OAAOC,WACtBP,EAAOQ,OAASF,OAAOG,YAEvBN,EAAIO,YAAc,UAClBP,EAAIQ,SAAW,QACfR,EAAIS,QAAU,QACdT,EAAIU,UAAY,IAEhB,IAAIC,GAAY,EACZC,EAAQ,EACRC,EAAQ,EACRC,EAAM,EACNC,GAAY,EAEhB,SAASC,EAAKC,GACLN,IACLX,EAAIO,mBAAqBO,cACzBd,EAAIkB,YACJlB,EAAImB,OAAOP,EAAOC,GAClBb,EAAIoB,OAAOH,EAAGI,QAASJ,EAAGK,SAC1BtB,EAAIuB,UACHX,EAAOC,GAAS,CAACI,EAAGI,QAASJ,EAAGK,WACjCR,GACW,MACPA,EAAM,IAENd,EAAIU,WAAa,KAAOV,EAAIU,WAAa,KACzCK,GAAaA,GAEbA,EACAf,EAAIU,YAEJV,EAAIU,aAMZb,EAAO2B,iBAAiB,YAAaR,GACrCnB,EAAO2B,iBAAiB,YAAcC,IAClCd,GAAY,IAEhBd,EAAO2B,iBAAiB,UAAW,IAAOb,GAAY,GACtDd,EAAO2B,iBAAiB,WAAY,IAAOb,GAAY","file":"src.e0efd344.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst canvas = document.querySelector('#draw');\n\nconst ctx = canvas.getContext('2d');\n\ncanvas.width = window.innerWidth\ncanvas.height = window.innerHeight\n\nctx.strokeStyle = '#bada55';\nctx.lineJoin = 'round';\nctx.lineCap = 'round';\nctx.lineWidth = 100;\n\nlet isDrawing = false;\nlet lastX = 0;\nlet lastY = 0;\nlet hue = 0;\nlet direction = true;\n\nfunction draw(ev) {\n    if (!isDrawing) return;\n    ctx.strokeStyle = `hsl(${hue},100%,50%)`;\n    ctx.beginPath();\n    ctx.moveTo(lastX, lastY);\n    ctx.lineTo(ev.offsetX, ev.offsetY);\n    ctx.stroke();\n    [lastX, lastY] = [ev.offsetX, ev.offsetY];\n    hue++;\n    if (hue >= 360) {\n        hue = 0;\n    };\n    if (ctx.lineWidth >= 100 || ctx.lineWidth <= 1) {\n        direction = !direction;\n    };\n    if (direction) {\n        ctx.lineWidth++;\n    } else {\n        ctx.lineWidth--;\n    };\n\n    // console.log(hue);\n};\n\ncanvas.addEventListener('mousemove', draw);\ncanvas.addEventListener('mousedown', (e) => {\n    isDrawing = true;\n})\ncanvas.addEventListener('mouseup', () => (isDrawing = false))\ncanvas.addEventListener('mouseout', () => (isDrawing = false))\n"]}